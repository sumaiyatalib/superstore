/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Store;

import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hii
 */
public class fBill extends javax.swing.JPanel {

    /**
     * Creates new form bil
     */
    ArrayList<customer> cust = new ArrayList<>();
    custDatabase c;
    DefaultTableModel model;

    public fBill() throws Exception {
        initComponents();
        c = new custDatabase();
        model = (DefaultTableModel) jTable1.getModel();
        c.Connect();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        Update = new javax.swing.JButton();
        Search = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Amount", "Discount", "PayWay"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 850;
        gridBagConstraints.ipady = 408;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(30, 0, 0, 0);
        add(jScrollPane1, gridBagConstraints);

        Update.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        Update.setForeground(new java.awt.Color(102, 0, 102));
        Update.setText("Update");
        Update.setFocusable(false);
        Update.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Update.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });
        jPanel1.add(Update);

        Search.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        Search.setForeground(new java.awt.Color(102, 0, 102));
        Search.setText("Search");
        Search.setEnabled(false);
        Search.setFocusable(false);
        Search.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Search.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });
        jPanel1.add(Search);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 649;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(jPanel1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        
                searchbill s = new searchbill();
                s.setVisible(true);
    }//GEN-LAST:event_SearchActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            cust = c.getCustdata();
       
        for (int i = 0; i < cust.size(); i++) {

            Object[] row = {cust.get(i).getRecipt_no(), cust.get(i).t_amount, cust.get(i).discount, cust.get(i).type};

            model.addRow(row);

        }
        Search.setEnabled(true);
         } catch (Exception ex) {
            Logger.getLogger(fBill.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_UpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Search;
    private javax.swing.JButton Update;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}