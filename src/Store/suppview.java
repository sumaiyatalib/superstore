/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Store;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hii
 */
public class suppview extends javax.swing.JPanel {

    /**
     * Creates new form suppview
     */
    ArrayList<Suppliers> supp;
    ArrayList<Suppliers> t = new ArrayList<>();
    suppDatabase s;
    DefaultTableModel model;

    public suppview() throws Exception {
        initComponents();
        s = new suppDatabase();
        s.Connect();
        supp = s.getEmpdata();
        model = (DefaultTableModel) Supp_table.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        Seacrch = new javax.swing.JTextField();
        Refresh = new javax.swing.JButton();
        Search = new javax.swing.JButton();
        name = new javax.swing.JRadioButton();
        typeofpr = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Supp_table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new java.awt.GridBagLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel2.setFont(new java.awt.Font("Felix Titling", 0, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 0, 102));
        jLabel2.setText("Search");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 46, 0, 0);
        jPanel1.add(jLabel2, gridBagConstraints);

        Seacrch.setBackground(new java.awt.Color(102, 0, 102));
        Seacrch.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        Seacrch.setForeground(new java.awt.Color(255, 255, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 211;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 20, 0, 0);
        jPanel1.add(Seacrch, gridBagConstraints);

        Refresh.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        Refresh.setForeground(new java.awt.Color(102, 0, 102));
        Refresh.setText("Refresh");
        Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(47, 59, 0, 0);
        jPanel1.add(Refresh, gridBagConstraints);

        Search.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        Search.setForeground(new java.awt.Color(102, 0, 102));
        Search.setText("Search");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 59, 0, 0);
        jPanel1.add(Search, gridBagConstraints);

        name.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(name);
        name.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        name.setForeground(new java.awt.Color(102, 0, 102));
        name.setText("By Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 59, 0, 0);
        jPanel1.add(name, gridBagConstraints);

        typeofpr.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(typeofpr);
        typeofpr.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        typeofpr.setForeground(new java.awt.Color(102, 0, 102));
        typeofpr.setText("By Id");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 59, 0, 0);
        jPanel1.add(typeofpr, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 10, 103, 0);
        add(jPanel1, gridBagConstraints);

        Supp_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ord_no", "Name", "Product count", "Price", "Total Payment", "Prod Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Supp_table);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 738;
        gridBagConstraints.ipady = 414;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(18, 6, 103, 0);
        add(jScrollPane1, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Felix Titling", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Suppliers");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 286;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 166, 0, 0);
        add(jLabel1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        // TODO add your handling code here:

        if (Seacrch.getText().compareToIgnoreCase("") == 0) {

        } else {
               
            if (typeofpr.isSelected()) {
                int id = Integer.parseInt(Seacrch.getText());
                for (int i = 0; i < supp.size(); i++) {
                    if (id == supp.get(i).Order_no) {
                        try {
                            productform p = new productform();
                            p.setVisible(true);
                            p.getSupp(supp.get(i));
                            p.Title.setText("Order Details");
                           

                        } catch (Exception ex) {
                            Logger.getLogger(suppview.class.getName()).log(Level.SEVERE, null, ex);
                        }

                    }

                }
            } else if (name.isSelected()) {
                t.clear();
                model.setRowCount(0);
                for (Suppliers supp1 : supp) {
                    if (Seacrch.getText().compareToIgnoreCase(supp1.Name) == 0) {
                        t.add(supp1.Clone());
                    }
                }
               // model.setRowCount(0);
                for (Suppliers t1 : t) {
                    Object[] row = {t1.Order_no, t1.Name, t1.stocks, t1.price, t1.price * t1.stocks, t1.prod_name};
                    model.addRow(row);
                }
                model.fireTableDataChanged();

            }

        }

    }//GEN-LAST:event_SearchActionPerformed

    private void RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshActionPerformed
        try {
            // TODO add your handling code here:
            supp.clear();
            supp = s.getEmpdata();
            model.setRowCount(0);

            for (Suppliers supp1 : supp) {
                Object[] row = {supp1.Order_no, supp1.Name, supp1.stocks, supp1.price, supp1.price * supp1.stocks, supp1.prod_name};
                model.addRow(row);
            }

            model.fireTableDataChanged();

        } catch (SQLException ex) {
            Logger.getLogger(suppview.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_RefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Refresh;
    private javax.swing.JTextField Seacrch;
    private javax.swing.JButton Search;
    private javax.swing.JTable Supp_table;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton name;
    private javax.swing.JRadioButton typeofpr;
    // End of variables declaration//GEN-END:variables
}
