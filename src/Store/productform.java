/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Store;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;

/**
 *
 * @author hii
 */
public class productform extends javax.swing.JFrame {

    /**
     * Creates new form productform
     */
    proddatabase p;
    suppDatabase sup;
    revDatabase rev = new revDatabase();
    Calendar cal = Calendar.getInstance();
    ArrayList<MainRev> revlist;

    public productform() throws Exception {
        initComponents();
        setTitle("ASM super Store");
        setIconImage(new ImageIcon("wal.jpg").getImage());
        Add.setVisible(false);
        
        setstock.setVisible(false);
        id.setVisible(false);
        jLabel2.setVisible(false);
        p = new proddatabase();
        sup = new suppDatabase();
        rev.Connect();
        revlist = rev.getRevdata();
    }

    @Override
    public void setDefaultCloseOperation(int operation) {
        super.setDefaultCloseOperation(HIDE_ON_CLOSE); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        Formpanel = new javax.swing.JPanel();
        Title = new javax.swing.JLabel();
        buttonPanel = new javax.swing.JPanel();
        Add = new javax.swing.JButton();
        setstock = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        Price = new javax.swing.JTextField();
        Supplier = new javax.swing.JTextField();
        Name = new javax.swing.JTextField();
        Subtypel = new javax.swing.JLabel();
        supp = new javax.swing.JLabel();
        Pricel = new javax.swing.JLabel();
        Type = new javax.swing.JTextField();
        Subtype = new javax.swing.JTextField();
        Typel = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        Quantity = new javax.swing.JTextField();
        namel = new javax.swing.JLabel();
        quantityl = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(560, 450));

        Formpanel.setBackground(new java.awt.Color(255, 255, 255));
        Formpanel.setEnabled(false);
        Formpanel.setLayout(new java.awt.GridBagLayout());

        Title.setFont(new java.awt.Font("Goudy Stout", 0, 24)); // NOI18N
        Title.setForeground(new java.awt.Color(102, 0, 102));
        Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Title.setText("Product Entry Form");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(29, 20, 0, 20);
        Formpanel.add(Title, gridBagConstraints);

        buttonPanel.setBackground(new java.awt.Color(255, 255, 255));
        buttonPanel.setLayout(new java.awt.GridBagLayout());

        Add.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        Add.setForeground(new java.awt.Color(102, 0, 102));
        Add.setText("Add");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 28;
        gridBagConstraints.ipady = -4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 10, 0, 0);
        buttonPanel.add(Add, gridBagConstraints);

        setstock.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        setstock.setForeground(new java.awt.Color(102, 0, 102));
        setstock.setText("Set Item");
        setstock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setstockActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(16, 10, 0, 0);
        buttonPanel.add(setstock, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(215, 6, 0, 0);
        Formpanel.add(buttonPanel, gridBagConstraints);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        Price.setBackground(new java.awt.Color(102, 0, 102));
        Price.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        Price.setForeground(new java.awt.Color(255, 255, 255));
        Price.setCaretColor(new java.awt.Color(255, 255, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 216;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 11, 0, 0);
        jPanel1.add(Price, gridBagConstraints);

        Supplier.setBackground(new java.awt.Color(102, 0, 102));
        Supplier.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        Supplier.setForeground(new java.awt.Color(255, 255, 255));
        Supplier.setCaretColor(new java.awt.Color(255, 255, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 217;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 10, 0, 0);
        jPanel1.add(Supplier, gridBagConstraints);

        Name.setBackground(new java.awt.Color(102, 0, 102));
        Name.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        Name.setForeground(new java.awt.Color(255, 255, 255));
        Name.setCaretColor(new java.awt.Color(255, 255, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 217;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 10, 0, 0);
        jPanel1.add(Name, gridBagConstraints);

        Subtypel.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        Subtypel.setForeground(new java.awt.Color(102, 0, 102));
        Subtypel.setText("Sub-Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(14, 10, 0, 0);
        jPanel1.add(Subtypel, gridBagConstraints);

        supp.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        supp.setForeground(new java.awt.Color(102, 0, 102));
        supp.setText("Supplier");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 31, 0, 0);
        jPanel1.add(supp, gridBagConstraints);

        Pricel.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        Pricel.setForeground(new java.awt.Color(102, 0, 102));
        Pricel.setText("Price");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 68, 0, 0);
        jPanel1.add(Pricel, gridBagConstraints);

        Type.setBackground(new java.awt.Color(102, 0, 102));
        Type.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        Type.setForeground(new java.awt.Color(255, 255, 255));
        Type.setCaretColor(new java.awt.Color(255, 255, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 217;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        jPanel1.add(Type, gridBagConstraints);

        Subtype.setBackground(new java.awt.Color(102, 0, 102));
        Subtype.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        Subtype.setForeground(new java.awt.Color(255, 255, 255));
        Subtype.setCaretColor(new java.awt.Color(255, 255, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.ipadx = 217;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 10, 0, 0);
        jPanel1.add(Subtype, gridBagConstraints);

        Typel.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        Typel.setForeground(new java.awt.Color(102, 0, 102));
        Typel.setText("Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(13, 69, 0, 0);
        jPanel1.add(Typel, gridBagConstraints);

        id.setBackground(new java.awt.Color(102, 0, 102));
        id.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        id.setForeground(new java.awt.Color(255, 255, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 217;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 10, 0, 0);
        jPanel1.add(id, gridBagConstraints);

        Quantity.setBackground(new java.awt.Color(102, 0, 102));
        Quantity.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        Quantity.setForeground(new java.awt.Color(255, 255, 255));
        Quantity.setCaretColor(new java.awt.Color(255, 255, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 217;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 10, 0, 0);
        jPanel1.add(Quantity, gridBagConstraints);

        namel.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        namel.setForeground(new java.awt.Color(102, 0, 102));
        namel.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(14, 62, 0, 0);
        jPanel1.add(namel, gridBagConstraints);

        quantityl.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        quantityl.setForeground(new java.awt.Color(102, 0, 102));
        quantityl.setText("Quantity");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 26, 0, 0);
        jPanel1.add(quantityl, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 0, 102));
        jLabel2.setText("ID");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(14, 94, 0, 0);
        jPanel1.add(jLabel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 10, 24, 0);
        Formpanel.add(jPanel1, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Formpanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Formpanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setstockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setstockActionPerformed
        // TODO add your handling code here:
        Calendar cal = Calendar.getInstance();
        int idp = Integer.parseInt(id.getText());
        int quan = Integer.parseInt(Quantity.getText());
        String suppl = Supplier.getText();
        double price = 0;
        double sup_price = 0;
        String date = cal.getTime().getDate() + "/" + (cal.getTime().getMonth() + 1) + "/" + (cal.getTime().getYear() - 100);
        try {
            p.Connect();

            rev.Connect();
            ArrayList<Product> proo = p.getProdata();
            for (Product proo1 : proo) {
                if (proo1.getId() == idp) {
                    if (Price.getText().compareToIgnoreCase("") == 0) {
                        price = proo1.getPrice();
                    } else {
                        price = Double.valueOf(Price.getText());

                    }
                    p.editQuan(proo1.getStock() + quan, idp);
                    sup.Connect();
                    sup_price = price * 0.92;
                    sup.insert(new Suppliers(date, suppl, proo1.getName(), sup_price, quan));
                    break;
                }
            }

            rev.editPurc(revlist.get(cal.getTime().getMonth()).t_buy + (sup_price * quan), cal.getTime().getMonth() + 1);
        } catch (SQLException ex) {
            Logger.getLogger(productform.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(productform.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_setstockActionPerformed

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        // TODO add your handling code here:

        String Nam = Name.getText();
        double price = Double.valueOf(Price.getText());
        String type = Type.getText();
        int quantity = Integer.parseInt(Quantity.getText());
        String subtype = Subtype.getText();
        String suppl = Supplier.getText();

        String date = cal.getTime().getDate() + "/" + (cal.getTime().getMonth() + 1) + "/" + (cal.getTime().getYear() - 100);
        try {
            p.Connect();
            sup.Connect();
            sup.insert(new Suppliers(date, suppl, Nam, price, quantity));
            p.insert(new Product(Nam, quantity, 1, price + (price * 0.08), type, subtype));
            rev.editPurc(revlist.get(cal.getTime().getMonth()).t_buy + (Double.valueOf(Price.getText()) * Integer.parseInt(Quantity.getText())), cal.getTime().getMonth() + 1);
        } catch (SQLException ex) {
            Logger.getLogger(productform.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(productform.class.getName()).log(Level.SEVERE, null, ex);
        }

        clear();
    }//GEN-LAST:event_AddActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(productform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(productform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(productform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(productform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new productform().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(productform.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    void getPro(Product p) {

        Name.setText(p.getName());
        Price.setText(String.valueOf(p.getPrice()));
        Type.setText(p.getType());
        Quantity.setText(String.valueOf(p.getStock()));
        Subtype.setText(p.getSubtype());
        Supplier.setText("");
        Name.setFocusable(false);
        Price.setFocusable(false);
        Type.setFocusable(false);
        Quantity.setFocusable(false);
        Subtype.setFocusable(false);
        Supplier.setFocusable(false);
        buttonPanel.setVisible(false);
    }

    void getSupp(Suppliers s) {
        Subtypel.setVisible(false);
        Subtype.setVisible(false);
        Typel.setText("Date");
        id.setText(String.valueOf(s.Order_no));
        Name.setText(s.prod_name);
        Quantity.setText(String.valueOf(s.stocks));
        Supplier.setText(s.Name);
        Type.setText(s.date_in);
        Price.setText(String.valueOf(s.price));
        Name.setFocusable(false);
        Price.setFocusable(false);
        Type.setFocusable(false);
        Quantity.setFocusable(false);
        Subtype.setFocusable(false);
        Supplier.setFocusable(false);
        buttonPanel.setVisible(false);

    }

    void updatestck() throws Exception {
        int idp = Integer.parseInt(id.getText());
        String Nam = Name.getText();
        double price = Double.valueOf(Price.getText());
        String type = Type.getText();
        int quantity = Integer.parseInt(Quantity.getText());
        String subtype = Subtype.getText();
        String supp = Supplier.getText();
        try {
            p.Connect();
            p.editPro(new Product(Nam, quantity, idp, price, type, subtype));

        } catch (SQLException ex) {
            Logger.getLogger(productform.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(productform.class.getName()).log(Level.SEVERE, null, ex);
        }

        rev.editPurc(revlist.get(cal.getTime().getMonth()).t_buy + ((price * 0.90) * quantity), cal.getTime().getMonth() + 1);
    }

    void clear() {

        Name.setText("");
        Price.setText("");
        Type.setText("");
        Quantity.setText("");
        Subtype.setText("");
        Supplier.setText("");
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JButton Add;
    private javax.swing.JPanel Formpanel;
    private javax.swing.JTextField Name;
    private javax.swing.JTextField Price;
    private javax.swing.JLabel Pricel;
    private javax.swing.JTextField Quantity;
    private javax.swing.JTextField Subtype;
    private javax.swing.JLabel Subtypel;
    private javax.swing.JTextField Supplier;
    javax.swing.JLabel Title;
    private javax.swing.JTextField Type;
    private javax.swing.JLabel Typel;
    private javax.swing.JPanel buttonPanel;
    javax.swing.JTextField id;
    javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel namel;
    private javax.swing.JLabel quantityl;
    public javax.swing.JButton setstock;
    private javax.swing.JLabel supp;
    // End of variables declaration//GEN-END:variables
}
